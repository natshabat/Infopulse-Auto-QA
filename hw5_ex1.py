# –ó–∞–¥–∞–Ω–∏–µ 1 (–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤)
# –ü–µ—Ä–µ–¥–µ–ª—ã–≤–∞–µ–º (–∞ —á—Ç–æ-—Ç–æ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ–º) –Ω–∞—à–∏ –∫–ª–∞—Å—Å—ã —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:
# 1) Person (–¥–≤–∞ —Å–≤–æ–π—Å—Ç–≤–∞: 1. —Ç–µ–ø–µ—Ä—å full_name –ø—É—Å—Ç—å –±—É–¥–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ–º, –∞ –Ω–µ —Ñ—É–Ω–∫—Ü–∏–µ–π (–æ–¥–Ω–æ –ø–æ–ª–µ, –º—ã –æ–∂–∏–¥–∞–µ–º - —Ç–∏–ø —Å—Ç—Ä–æ–∫–∞
# –∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —Å–ª–æ–≤ ¬´–∏–º—è —Ñ–∞–º–∏–ª–∏—è¬ª), –∞ —Å–≤–æ–π—Å—Ç–≤ name –∏ surname –Ω–µ—Ç—É, 2. –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è).
# –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ:
# 	‚Ä¢–≤—ã–¥–µ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–º—è –∏–∑ full_name
# 	‚Ä¢–≤—ã–¥–µ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—é –∏–∑ full_name;
# 	‚Ä¢–≤—ã—á–∏—Å–ª—è–µ—Ç —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –±—ã–ª–æ/–µ—Å—Ç—å/–∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è –≤ –≥–æ–¥—É, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (obj.age_in(year));
# 	–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –≤ —ç—Ç–æ–º –≥–æ–¥—É;
# * (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ) –ú–æ–∂–µ—Ç–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤ full_name –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –¥–≤—É—Ö —Å–ª–æ–≤,
# –µ—Å–ª–∏ –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ üòä
# * (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ) –ú–æ–∂–µ—Ç–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 2020
# (—Ç–µ–∫—É—â–∏–π –≥–æ–¥ ‚Äì –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö), –Ω–æ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 1900. –ï—Å–ª–∏ –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ


class Person:
    def __init__(self, fullname, birthday):
        self.fullname = fullname
        if len(fullname.split()) != 2:
            raise print('The fullname should consist two words, ValueError')
        self.birthday = birthday
        if not(1900 <= birthday <= 2021):
            raise print("Please,enter the correct birthday, ValueError")
    def name_from_fullname(self):
        ''' –≤—ã–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º—è –∏–∑ full_name '''
        return self.fullname.split()[0]
    def surname_from_fullname(self):
        ''' –≤—ã–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—é –∏–∑ full_name '''
        return self.fullname.split()[-1]
    def age_in_year(self, year = 2021):
        if year is None:
            age = 2021 - self.birthday
        else:
            age = year - self.birthday
        return age


p = Person('Nataliya Shabat', 1990)
print(p.fullname, p.birthday)
print(p.surname_from_fullname(), p.name_from_fullname())
print(p.age_in_year())
print(len(p.fullname.split()))